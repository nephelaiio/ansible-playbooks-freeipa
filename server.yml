---
- name: Configure ipa server

  hosts: ipa_server

  become: true

  vars:

    ipaserver_setup_dns: yes
    ipaserver_auto_forwarders: "{{ ipaserver_forwarders is not defined }}"
    ipaserver_setup_firewalld: no
    ipaserver_allow_zone_overlap: yes
    ipaserver_no_dnssec_validation: yes
    ipaserver_setup_adtrust: yes
    ipaclient_force_join: yes
    ipaclient_mkhomedir: yes

  roles:

    - bertvv.hosts
    - ipaserver

  pre_tasks:

    - block:

        - name: set recursor metadata
          set_fact:
            pdns_recursor_domains: "{{ pdns_recursors | default([]) | product([ipaserver_domain]) | list }}"

        - name: query resolver delegations
          uri:
            url: "https://{{ item }}/api/v1/servers/localhost/zones"
            method: GET
            headers:
              X-API-Key: "{{ pdns_rec_api_key }}"
            validate_certs: no
          loop: "{{ pdns_recursors | default([]) }}"
          register: pdns_recursor_zones
          tags:
            - recursors

        - name: delete resolver delegations
          uri:
            url: "https://{{ recursor }}/api/v1/servers/localhost/zones/{{ zone_id }}"
            method: DELETE
            status_code:
              - 200
              - 204
            headers:
              X-API-Key: "{{ pdns_rec_api_key }}"
          loop_control:
            label: "{{ recursor }}: {{ zone_name }}"
          vars:
            recursor: "{{ item.0 }}"
            zone_name: "{{ item.1 }}"
            recursor_zones: "{{ pdns_recursor_zones.results | selectattr('item', 'equalto', recursor) | first }}"
            zone_id: "{{ (recursor_zones.json | selectattr('name', 'match', zone_name + '\\.?') | first).id | default('') }}"
          loop: "{{ pdns_recursor_domains }}"
          when: zone_id != ''
          tags:
            - recursors

        - name: create recursor delegation
          uri:
            url: "https://{{ recursor }}/api/v1/servers/localhost/zones"
            method: POST
            status_code:
              - 200
              - 201
            body_format: json
            body:
              name: "{{ zone_name }}"
              type: Zone
              kind: Forwarded
              servers: "{{ play_hosts | map('extract', hostvars, ['ansible_default_ipv4', 'address']) | list }}"
              recursion_desired: yes
            headers:
              X-API-Key: "{{ pdns_rec_api_key }}"
          loop_control:
            label: "{{ recursor }}: {{ zone_name }}"
          vars:
            recursor: "{{ item.0 }}"
            zone_name: "{{ item.1 | regex_replace('\\.?$', '') }}."
          loop: "{{ pdns_recursor_domains }}"

      when: pdns_recursors is defined

  tasks:

    - name: manage freeipa backup cronjob
      cron:
        name: freeipa-conf-backup
        job: ipa-backup
        special_time: daily

    - name: manage kerberos log with logrotate
      copy:
        dest: /etc/logrotate.d/krb5kdc
        content: |
          /var/log/krb5kdc.log{
            missingok
            notifempty
            weekly
            rotate 12
            postrotate
              /usr/bin/systemctl reload krb5kdc.service >/dev/null 2>&1 || true
            endscript
          }
      when: weekly_krb5kdc_rotate | default(`false`) | bool

  handlers:

    - name: restart ipa services
      command: "ipactl restart"

    - name: restart apache
      service:
        name: httpd
        state: restarted
